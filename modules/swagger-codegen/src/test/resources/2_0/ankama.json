{
  "swagger": "2.0",
  "info": {
    "title": "Ankama",
    "version": "1"
  },
  "host": "haapi.ankama.lan",
  "basePath": "\/json\/Ankama\/v1",
  "schemes": ["https"],
  "consumes": ["application\/json"],
  "produces": ["application\/json"],
  "paths": {
    "\/Account\/Account": {
      "get": {
        "description": "Return current account",
        "operationId": "Account",
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/Account"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/Avatar": {
      "get": {
        "description": "Get Avatar for current game",
        "operationId": "Avatar",
        "parameters": [
          {
            "name": "game",
            "in": "query",
            "description": "gameId",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/Avatar"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/CreateGhost": {
      "get": {
        "description": "Create an Ankama Ghost Account without any password",
        "operationId": "CreateGhost",
        "parameters": [
          {
            "name": "game",
            "in": "query",
            "description": "gameId",
            "type": "integer",
            "required": true
          },
          {
            "name": "lang",
            "in": "query",
            "description": "language for error display",
            "type": "string",
            "required": true
          },
          {
            "name": "uid",
            "in": "query",
            "description": "A game internal unique Id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/Account"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "a translasted reason",
            "schema": {"$ref": "#\/definitions\/ErrorTranslated"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "500": {
            "description": "Unable to create ankama account",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/CreateGuest": {
      "get": {
        "description": "Create an Ankama Guest Account",
        "operationId": "CreateGuest",
        "parameters": [
          {
            "name": "game",
            "in": "query",
            "description": "gameId",
            "type": "integer",
            "required": true
          },
          {
            "name": "lang",
            "in": "query",
            "description": "language for error display",
            "type": "string",
            "required": true
          },
          {
            "name": "web_params",
            "in": "query",
            "description": "data passed by web",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/Account"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Password": {
                "description": "The generated password for this guest account",
                "type": "string"
              }
            }
          },
          "601": {
            "description": "a translasted reason",
            "schema": {"$ref": "#\/definitions\/ErrorTranslated"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "500": {
            "description": "Unable to create ankama account",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "tags": ["Account"]
      }
    },
    "\/Account\/CreateToken": {
      "get": {
        "description": "Create a token for an Ankama Account",
        "operationId": "CreateToken",
        "parameters": [
          {
            "name": "game",
            "in": "query",
            "description": "gameId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/Token"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/CreateTokenWithPassword": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "SignOn an Ankama Account with login & password",
        "operationId": "CreateTokenWithPassword",
        "parameters": [
          {
            "name": "login",
            "in": "formData",
            "description": "login",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "formData",
            "description": "clear password",
            "type": "string",
            "required": true
          },
          {
            "name": "game",
            "in": "formData",
            "description": "gameId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/Token"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "login failed",
            "schema": {"$ref": "#\/definitions\/ErrorAccountLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "tags": ["Account"]
      }
    },
    "\/Account\/SetNickname": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Set the nickname of account",
        "operationId": "SetNickname",
        "parameters": [
          {
            "name": "account_id",
            "in": "formData",
            "description": "",
            "type": "integer",
            "required": true
          },
          {
            "name": "nickname",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "updated nickname",
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "602": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/ErrorAccountNicknameSet"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/SignOff": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "SignOff an account account",
        "operationId": "SignOff",
        "parameters": [
          {
            "name": "session_id",
            "in": "formData",
            "description": "Account Session Id",
            "type": "integer",
            "required": true
          },
          {
            "name": "os",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "device",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "connection_type",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "client_type",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "partner",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": false
          },
          {
            "name": "device_uid",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "204": {
            "description": "operation",
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "422": {
            "description": "Invalid session id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/SignOnWithApiKey": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "SignOn an Ankama Account with ApiKey",
        "operationId": "SignOnWithApiKey",
        "parameters": [
          {
            "name": "game",
            "in": "formData",
            "description": "gameId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/SessionLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "login failed",
            "schema": {"$ref": "#\/definitions\/ErrorAccountLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "603": {
            "description": "ApiAuth Failed : bad ApiKey (expired or invalid) or bad Password",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/SignOnWithGhostUid": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "SignOn an Ankama Account with login & password\n\nConnection from game server",
        "operationId": "SignOnWithGhostUid",
        "parameters": [
          {
            "name": "uid",
            "in": "formData",
            "description": "A game internal unique Id",
            "type": "string",
            "required": true
          },
          {
            "name": "ip",
            "in": "formData",
            "description": "ip",
            "type": "string",
            "required": true
          },
          {
            "name": "game",
            "in": "formData",
            "description": "gameId",
            "type": "integer",
            "required": true
          },
          {
            "name": "os",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": false
          },
          {
            "name": "device",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": false
          },
          {
            "name": "connection_type",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": false
          },
          {
            "name": "client_type",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": false
          },
          {
            "name": "partner",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": false
          },
          {
            "name": "device_uid",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/SessionLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "login failed",
            "schema": {"$ref": "#\/definitions\/ErrorAccountLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/SignOnWithPassword": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "SignOn an Ankama Account with login & password\n\nConnection from game server",
        "operationId": "SignOnWithPassword",
        "parameters": [
          {
            "name": "login",
            "in": "formData",
            "description": "login",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "formData",
            "description": "clear password",
            "type": "string",
            "required": true
          },
          {
            "name": "ip",
            "in": "formData",
            "description": "ip",
            "type": "string",
            "required": true
          },
          {
            "name": "game",
            "in": "formData",
            "description": "gameId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/SessionLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "login failed",
            "schema": {"$ref": "#\/definitions\/ErrorAccountLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Account"]
      }
    },
    "\/Account\/SignOnWithToken": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Signon an Ankama Account with token",
        "operationId": "SignOnWithToken",
        "parameters": [
          {
            "name": "token",
            "in": "formData",
            "description": "unique usage token create with method CreateToken",
            "type": "string",
            "required": true
          },
          {
            "name": "ip",
            "in": "formData",
            "description": "ip",
            "type": "string",
            "required": true
          },
          {
            "name": "game",
            "in": "formData",
            "description": "gameId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/SessionLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "login failed",
            "schema": {"$ref": "#\/definitions\/ErrorAccountLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Account"]
      }
    },
    "\/Api\/CreateApiKey": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Create an apikey from login & password",
        "operationId": "CreateApiKey",
        "parameters": [
          {
            "name": "login",
            "in": "formData",
            "description": "login",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "formData",
            "description": "clear password",
            "type": "string",
            "required": true
          },
          {
            "name": "long_life_token",
            "in": "formData",
            "description": "days token or hour token",
            "type": "boolean",
            "required": false
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "meta data to add to token",
            "type": "array",
            "required": false,
            "items": {"type": "string"},
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/ApiKey"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "login failed",
            "schema": {"$ref": "#\/definitions\/ErrorAccountLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "tags": ["Api"]
      }
    },
    "\/Api\/CreateApiKeyFromServer": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Create an apikey for an account_id directly from server",
        "operationId": "CreateApiKeyFromServer",
        "parameters": [
          {
            "name": "account_id",
            "in": "formData",
            "description": "",
            "type": "integer",
            "required": true
          },
          {
            "name": "ip",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "meta data to add to token",
            "type": "array",
            "required": false,
            "items": {"type": "string"},
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/ApiKey"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Api"]
      }
    },
    "\/Api\/DeleteApiKey": {
      "get": {
        "description": "Delete an apikey for an Ankama Account",
        "operationId": "DeleteApiKey",
        "responses": {
          "204": {
            "description": "deleted",
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Api"]
      }
    },
    "\/Game\/AdminRight": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Return Admin right for a Account",
        "operationId": "AdminRight",
        "parameters": [
          {
            "name": "game",
            "in": "formData",
            "description": "gameId",
            "type": "integer",
            "required": true
          },
          {
            "name": "account",
            "in": "formData",
            "description": "accountId",
            "type": "integer",
            "required": true
          },
          {
            "name": "server",
            "in": "formData",
            "description": "serverId",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "code 200 response",
            "schema": {"$ref": "#\/definitions\/GameAdminRightResponse"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Game"]
      }
    },
    "\/Game\/EndSession": {
      "get": {
        "description": "Log a game session data",
        "operationId": "EndSession",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "description": "the game session id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "operation",
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "422": {
            "description": "Invalid session id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Game"]
      }
    },
    "\/Game\/SendEvent": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Send event analytics",
        "operationId": "SendEvent",
        "parameters": [
          {
            "name": "game",
            "in": "formData",
            "description": "gameId",
            "type": "integer",
            "required": true
          },
          {
            "name": "session_id",
            "in": "formData",
            "description": "the game session id",
            "type": "integer",
            "required": true
          },
          {
            "name": "event_id",
            "in": "formData",
            "description": "",
            "type": "integer",
            "required": true
          },
          {
            "name": "data",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "operation",
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAes": []}],
        "tags": ["Game"]
      }
    },
    "\/Game\/StartSession": {
      "get": {
        "description": "Log a game session data",
        "operationId": "StartSession",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "description": "the account session id",
            "type": "integer",
            "required": true
          },
          {
            "name": "server_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          },
          {
            "name": "character_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "204": {
            "description": "operation",
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Id": {
                "description": "The generated game session id",
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Invalid session id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Game"]
      }
    },
    "\/Game\/Events\/Category\/Delete": {
      "get": {
        "description": "Delete a category",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "code 200 response",
            "schema": {"$ref": "#\/definitions\/GameEventsCategoryDeleteResponse"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "604": {
            "description": "Invalid category id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"Auth": []}],
        "tags": ["Game\/Events\/Category"]
      }
    },
    "\/Game\/Events\/Category\/GetAll": {
      "get": {
        "description": "Get all categories",
        "operationId": "GetAll",
        "responses": {
          "200": {
            "description": "categories",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/GameEventsCategory"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"Auth": []}],
        "tags": ["Game\/Events\/Category"]
      }
    },
    "\/Game\/Events\/Category\/GetById": {
      "get": {
        "description": "Get a category by id",
        "operationId": "GetById",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "$category",
            "schema": {"$ref": "#\/definitions\/GameEventsCategory"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "604": {
            "description": "Invalid category id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"Auth": []}],
        "tags": ["Game\/Events\/Category"]
      }
    },
    "\/Game\/Events\/Category\/Insert": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Create a category",
        "operationId": "Insert",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "parent_id",
            "in": "formData",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "$category the generated id",
            "schema": {"$ref": "#\/definitions\/GameEventsCategory"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "422": {
            "description": "Name already exists",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"Auth": []}],
        "tags": ["Game\/Events\/Category"]
      }
    },
    "\/Game\/Events\/Category\/Update": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Update a category",
        "operationId": "Update",
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "",
            "type": "integer",
            "required": true
          },
          {
            "name": "name",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "parent_id",
            "in": "formData",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "code 200 response",
            "schema": {"$ref": "#\/definitions\/GameEventsCategoryUpdateResponse"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "604": {
            "description": "Invalid category id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          },
          "422": {
            "description": "Name already exists",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"Auth": []}],
        "tags": ["Game\/Events\/Category"]
      }
    },
    "\/Kard\/ConsumeByOrderId": {
      "get": {
        "description": "Consume Kard from an order",
        "operationId": "ConsumeByOrderId",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/KardKard"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "422": {
            "description": "Invalid account id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          },
          "602": {
            "description": "No kards to consume on this order",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Kard"]
      }
    },
    "\/Money\/KrozAmount": {
      "get": {
        "description": "Return kroz amount",
        "operationId": "KrozAmount",
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/MoneyBalance"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Money"]
      }
    },
    "\/Money\/KrozAmountWithPassword": {
      "get": {
        "description": "Return kroz amount",
        "operationId": "KrozAmountWithPassword",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "accountId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/MoneyBalance"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "604": {
            "description": "Invalid account id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Money"]
      }
    },
    "\/Money\/KrozCredit": {
      "get": {
        "description": "Credit kroz on account for a game",
        "operationId": "KrozCredit",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "accountId",
            "type": "integer",
            "required": true
          },
          {
            "name": "amount",
            "in": "query",
            "description": "amount",
            "type": "integer",
            "required": true
          },
          {
            "name": "game",
            "in": "query",
            "description": "gameId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/MoneyBalance"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "604": {
            "description": "Invalid account id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Money"]
      }
    },
    "\/Money\/OgrinsAmount": {
      "get": {
        "description": "Return ogrine amount",
        "operationId": "OgrinsAmount",
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/MoneyBalance"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Money"]
      }
    },
    "\/Money\/OgrinsAmountWithPassword": {
      "get": {
        "description": "Return ogrine amount",
        "operationId": "OgrinsAmountWithPassword",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "accountId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/MoneyBalance"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "604": {
            "description": "Invalid account id",
            "schema": {"$ref": "#\/definitions\/HaapiException"}
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Money"]
      }
    },
    "\/Shop\/ArticlesListByCategory": {
      "get": {
        "description": "Returns list of articles",
        "operationId": "ArticlesListByCategory",
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopArticle"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Total": {
                "description": "",
                "type": "integer"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/ArticlesListByCategoryKey": {
      "get": {
        "description": "Returns list of articles by a category key",
        "operationId": "ArticlesListByCategoryKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopArticle"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Total": {
                "description": "",
                "type": "integer"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/ArticlesListByGondolahead": {
      "get": {
        "description": "Returns list of articles by a gondola head",
        "operationId": "ArticlesListByGondolahead",
        "parameters": [
          {
            "name": "gondolahead_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopArticle"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Total": {
                "description": "",
                "type": "integer"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/ArticlesListByIds": {
      "get": {
        "description": "Returns list of articles by id",
        "operationId": "ArticlesListByIds",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "",
            "type": "array",
            "required": true,
            "items": {"type": "integer"},
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopArticle"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Total": {
                "description": "",
                "type": "integer"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/ArticlesListByKey": {
      "get": {
        "description": "Returns list of articles by key",
        "operationId": "ArticlesListByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "type": "array",
            "required": true,
            "items": {"type": "string"},
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopArticle"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Total": {
                "description": "",
                "type": "integer"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/ArticlesListSearch": {
      "get": {
        "description": "Search for a list of articles",
        "operationId": "ArticlesListSearch",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "",
            "type": "string",
            "required": true
          },
          {
            "name": "categories_ids",
            "in": "query",
            "description": "",
            "type": "array",
            "required": false,
            "items": {"type": "integer"},
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopArticle"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Total": {
                "description": "",
                "type": "integer"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/CategoriesList": {
      "get": {
        "description": "Returns list of categories",
        "operationId": "CategoriesList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopCategory"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/CategoriesListByKey": {
      "get": {
        "description": "Returns list of categories by key",
        "operationId": "CategoriesListByKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopCategory"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              },
              "X-Total": {
                "description": "",
                "type": "integer"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/CreateApiKey": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Create an apikey for an account_id directly from server",
        "operationId": "CreateApiKey",
        "parameters": [
          {
            "name": "shop_key",
            "in": "formData",
            "description": "The shop key provide by web team",
            "type": "string",
            "required": true
          },
          {
            "name": "lang",
            "in": "formData",
            "description": "Display language",
            "type": "string",
            "required": true
          },
          {
            "name": "account_id",
            "in": "formData",
            "description": "AccountId",
            "type": "integer",
            "required": true
          },
          {
            "name": "ip",
            "in": "formData",
            "description": "Current Account Ip",
            "type": "string",
            "required": true
          },
          {
            "name": "character_id",
            "in": "formData",
            "description": "The current connected CharacterId",
            "type": "integer",
            "required": false
          },
          {
            "name": "server_id",
            "in": "formData",
            "description": "the current server",
            "type": "integer",
            "required": false
          },
          {
            "name": "country",
            "in": "formData",
            "description": "The country (used for partner like Steam only for true money payment)",
            "type": "string",
            "required": false
          },
          {
            "name": "currency",
            "in": "formData",
            "description": "True Money currency only (used for partner like Steam only for true money payment)",
            "type": "string",
            "required": false
          },
          {
            "name": "payment_mode",
            "in": "formData",
            "description": "True Money paymentmode only (used for partner like Steam only for true money payment)",
            "type": "string",
            "required": false
          },
          {
            "name": "steam_id",
            "in": "formData",
            "description": "SteamId (used for partner like Steam only for true money payment)",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/ApiKey"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthPassword": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/GondolaHeadsList": {
      "get": {
        "description": "Returns list of gondola heads",
        "operationId": "GondolaHeadsList",
        "parameters": [
          {
            "name": "home",
            "in": "query",
            "description": "",
            "type": "boolean",
            "required": false
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopGondolaHead"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/HightLightsList": {
      "get": {
        "description": "Returns list of highlight",
        "operationId": "HightLightsList",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type of highlight",
            "type": "string",
            "required": false
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {"$ref": "#\/definitions\/ShopHighlight"}
            },
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/Home": {
      "get": {
        "description": "Returns home elements",
        "operationId": "Home",
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/ShopHome"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/PartnerFinalizeTransaction": {
      "get": {
        "description": "Finalize transaction of an order",
        "operationId": "PartnerFinalizeTransaction",
        "parameters": [
          {
            "name": "finalize",
            "in": "query",
            "description": "",
            "type": "boolean",
            "required": true
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/ShopBuyResult"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/ShopBuyError"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Shop\/QuickBuy": {
      "get": {
        "description": "Quick buy an article",
        "operationId": "QuickBuy",
        "parameters": [
          {
            "name": "article_id",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": true
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/ShopBuyResult"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "601": {
            "description": "",
            "schema": {"$ref": "#\/definitions\/ShopBuyError"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"AuthAnkamaApiKey": []}],
        "tags": ["Shop"]
      }
    },
    "\/Steam\/GuestCreate": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Create a ghost Ankama Account",
        "operationId": "GuestCreate",
        "parameters": [
          {
            "name": "session_ticket",
            "in": "formData",
            "description": "",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/Account"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "tags": ["Steam"]
      }
    },
    "\/Steam\/Link": {
      "": {
        "description": "Try to link the Account Account with Steam",
        "operationId": "Link",
        "parameters": [
          {
            "name": "session_ticket",
            "in": "query",
            "description": "Steam session ticket",
            "type": "string",
            "required": true
          },
          {
            "name": "login",
            "in": "query",
            "description": "Ankama Login",
            "type": "string",
            "required": true
          },
          {
            "name": "password",
            "in": "query",
            "description": "Ankama Password",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/Account"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "202": {
            "description": "login failed",
            "schema": {"$ref": "#\/definitions\/ErrorAccountLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "security": [{"Auth": []}],
        "tags": ["Steam"]
      }
    },
    "\/Steam\/Login": {
      "post": {
        "consumes": ["application\/x-www-form-urlencoded"],
        "description": "Try to log the current user with Steam session ticket",
        "operationId": "Login",
        "parameters": [
          {
            "name": "session_ticket",
            "in": "formData",
            "description": "Steam session ticket",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "login succeeded",
            "schema": {"$ref": "#\/definitions\/Account"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          },
          "202": {
            "description": "login failed",
            "schema": {"$ref": "#\/definitions\/ErrorAccountLogin"},
            "headers": {
              "X-Duration": {
                "description": "Api Duration",
                "type": "number"
              }
            }
          }
        },
        "tags": ["Steam"]
      }
    }
  },
  "coucou": "toto",
  "securityDefinitions": {
    "AuthAnkamaApiKey": {
      "type": "apiKey",
      "name": "APIKEY",
      "in": "header"
    },
    "AuthPassword": {"type": "basic"}
  },
  "definitions": {
    "Account": {
      "required": [
        "id",
        "type",
        "login",
        "nickname",
        "security",
        "lang",
        "community",
        "added_date",
        "added_ip",
        "login_date",
        "login_ip"
      ],
      "properties": {
        "id": {"type": "integer"},
        "type": {
          "type": "string",
          "description": "Account Type\n- ANKAMA : Full Ankama Account\n- EXTERNAL : Ankama Account without password and external providers auth\n- GUEST : Guest Ankama Account",
          "items": {
            "enum": [
              "ANKAMA",
              "EXTERNAL",
              "GUEST"
            ]
          }
        },
        "login": {"type": "string"},
        "nickname": {"type": "string"},
        "security": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SHIELD",
              "AUTHENTICATOR"
            ]
          },
          "description": "Security enabled on this account\n- SHIELD : Ankama Shield activated\n- AUTHENTICATOR : Ankama Authenticator activated"
        },
        "lang": {"type": "string"},
        "community": {
          "type": "string",
          "description": "Account Community\n- COMMUNITY_0 : FR\n- COMMUNITY_1 : UK\n- COMMUNITY_2 : INT\n- COMMUNITY_3 : DE\n- COMMUNITY_4 : ES\n- COMMUNITY_5 : RU\n- COMMUNITY_6 : PT\n- COMMUNITY_7 : NL\n- COMMUNITY_8 : JP\n- COMMUNITY_9 : IT\n- COMMUNITY_10 : PH\n- COMMUNITY_11 : NA\n- COMMUNITY_12 : CN\n- COMMUNITY_13 : ASIA\n- COMMUNITY_14 : TW",
          "items": {
            "enum": [
              "COMMUNITY_0",
              "COMMUNITY_1",
              "COMMUNITY_2",
              "COMMUNITY_3",
              "COMMUNITY_4",
              "COMMUNITY_5",
              "COMMUNITY_6",
              "COMMUNITY_7",
              "COMMUNITY_8",
              "COMMUNITY_9",
              "COMMUNITY_10",
              "COMMUNITY_11",
              "COMMUNITY_12",
              "COMMUNITY_13",
              "COMMUNITY_14"
            ]
          }
        },
        "added_date": {
          "type": "string",
          "format": "date-time"
        },
        "added_ip": {"type": "string"},
        "login_date": {
          "type": "string",
          "format": "date-time"
        },
        "login_ip": {"type": "string"}
      }
    },
    "Avatar": {
      "required": ["url"],
      "properties": {"url": {"type": "string"}}
    },
    "ErrorTranslated": {
      "required": [
        "key",
        "text"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "The reason for create failed"
        },
        "text": {
          "type": "string",
          "description": "The translated reason"
        }
      }
    },
    "Token": {
      "required": ["token"],
      "properties": {"token": {"type": "string"}}
    },
    "ErrorAccountLogin": {
      "required": ["reason"],
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for login failed\n- BAN : The account is ban\n- BLACKLIST : The Ip used is blacklist\n- LOCKED : The account is locked\n- DELETED : The account is deleted\n- RESETANKAMA : The account need a reset on account management\n- OTPTIMEFAILED : The account need to be unlock by Ankama Authenticator\n- SECURITYCARD : The account need a security card\n- BRUTEFORCE : The ip used is blacklist due to bruteforce\n- FAILED : The login \/ password is invalid\n- PARTNER : The account is not allowed due to Partner limitation\n- MAILNOVALID : The mail is invalid and need to be validated on account management\n- BETACLOSED : The account is not allowed on this beta close",
          "items": {
            "enum": [
              "BAN",
              "BLACKLIST",
              "LOCKED",
              "DELETED",
              "RESETANKAMA",
              "OTPTIMEFAILED",
              "SECURITYCARD",
              "BRUTEFORCE",
              "FAILED",
              "PARTNER",
              "MAILNOVALID",
              "BETACLOSED"
            ]
          }
        }
      }
    },
    "ErrorAccountNicknameSet": {
      "required": ["reason"],
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for nickname set failed\n- LENGTH_TOOSMALL : The length is too small\n- LENGTH_EXCEEDED : The length is too long\n- DUPLICATE : The nickname is already used\n- INVALID_FORMAT : The format is invalid\n- INVALID_CONTENT : The nickname contains invalid word\n- INVALID_ACCOUNT : The account doesn't exists\n- LOGINEQUALSNICKNAME : Login must be different than email",
          "items": {
            "enum": [
              "LENGTH_TOOSMALL",
              "LENGTH_EXCEEDED",
              "DUPLICATE",
              "INVALID_FORMAT",
              "INVALID_CONTENT",
              "INVALID_ACCOUNT",
              "LOGINEQUALSNICKNAME"
            ]
          }
        }
      }
    },
    "Game": {
      "required": [
        "total_time_elapsed",
        "first_subscription_date",
        "expiration_date",
        "ban_end_date",
        "added_date",
        "login_date",
        "login_ip"
      ],
      "properties": {
        "total_time_elapsed": {
          "type": "string",
          "format": "date-time",
          "description": "In seconds"
        },
        "first_subscription_date": {
          "type": "string",
          "format": "date-time"
        },
        "expiration_date": {
          "type": "string",
          "format": "date-time"
        },
        "ban_end_date": {
          "type": "string",
          "format": "date-time"
        },
        "added_date": {
          "type": "string",
          "format": "date-time"
        },
        "login_date": {
          "type": "string",
          "format": "date-time"
        },
        "login_ip": {"type": "string"}
      }
    },
    "SessionLogin": {
      "required": [
        "id",
        "account",
        "game"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Account Session Id"
        },
        "account": {
          "type": "object",
          "$ref": "#\/definitions\/Account"
        },
        "game": {
          "type": "object",
          "$ref": "#\/definitions\/Game"
        }
      }
    },
    "ApiKey": {
      "required": [
        "key",
        "account_id",
        "ip",
        "added_date",
        "meta",
        "data",
        "expiration_date"
      ],
      "properties": {
        "key": {"type": "string"},
        "account_id": {"type": "integer"},
        "ip": {"type": "string"},
        "added_date": {
          "type": "string",
          "format": "date-time"
        },
        "meta": {
          "type": "array",
          "items": {"type": "string"}
        },
        "data": {
          "type": "object",
          "additionalProperties": {"type": "string"}
        },
        "expiration_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GameAdminRightResponse": {
      "required": ["rights"],
      "properties": {
        "rights": {
          "type": "array",
          "items": {"type": "integer"},
          "description": "If server is not null, a simple array or a 2 dimensions arrays with server as key, array of right as value @TODO"
        }
      }
    },
    "GameEventsCategoryDeleteResponse": {
      "required": ["success"],
      "properties": {
        "success": {
          "type": "boolean",
          "description": "no description"
        }
      }
    },
    "GameEventsCategory": {
      "required": [
        "id",
        "parent_id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Auto increment"
        },
        "parent_id": {"type": "string"},
        "name": {"type": "string"}
      }
    },
    "GameEventsCategoryUpdateResponse": {
      "required": ["success"],
      "properties": {
        "success": {
          "type": "boolean",
          "description": "no description"
        }
      }
    },
    "KardTypeKrosmaster": {
      "required": [
        "id",
        "name",
        "pedestal_id",
        "pedestal_name"
      ],
      "properties": {
        "id": {"type": "integer"},
        "name": {"type": "string"},
        "pedestal_id": {"type": "integer"},
        "pedestal_name": {"type": "string"}
      }
    },
    "KardKard": {
      "required": [
        "id",
        "name",
        "description",
        "type",
        "kard_multiple",
        "kard_krosmaster"
      ],
      "properties": {
        "id": {"type": "integer"},
        "name": {"type": "string"},
        "description": {"type": "string"},
        "type": {"type": "string"},
        "kard_multiple": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/KardKard"
          }
        },
        "kard_krosmaster": {
          "type": "object",
          "$ref": "#\/definitions\/KardTypeKrosmaster"
        }
      }
    },
    "MoneyBalance": {
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "currency": {
          "type": "string",
          "description": "Valid currency\n- OGR : Ogrins\n- KRZ : Krozs",
          "items": {
            "enum": [
              "OGR",
              "KRZ"
            ]
          }
        },
        "amount": {
          "type": "number",
          "description": "Money balance"
        }
      }
    },
    "ShopReferenceTypeIceGift": {
      "required": [
        "image",
        "description",
        "name",
        "id",
        "metas"
      ],
      "properties": {
        "image": {"type": "string"},
        "description": {"type": "string"},
        "name": {"type": "string"},
        "id": {"type": "integer"},
        "metas": {
          "type": "object",
          "additionalProperties": {"type": "string"}
        }
      }
    },
    "ShopReferenceTypeVirtualGift": {
      "required": [
        "image",
        "description",
        "name",
        "id"
      ],
      "properties": {
        "image": {"type": "string"},
        "description": {"type": "string"},
        "name": {"type": "string"},
        "id": {"type": "integer"}
      }
    },
    "ShopReferenceTypeKard": {
      "required": [
        "id",
        "type",
        "name",
        "description",
        "image",
        "kards"
      ],
      "properties": {
        "id": {"type": "integer"},
        "type": {"type": "string"},
        "name": {"type": "string"},
        "description": {"type": "string"},
        "image": {"type": "string"},
        "kards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/KardKard"
          }
        }
      }
    },
    "ShopReferenceTypeKrosmaster": {
      "required": [
        "pedestal",
        "id"
      ],
      "properties": {
        "pedestal": {"type": "integer"},
        "id": {
          "type": "integer",
          "description": "Figurine Id"
        }
      }
    },
    "ShopReference": {
      "required": [
        "description",
        "name",
        "free",
        "quantity",
        "type",
        "reference_icegift",
        "reference_virtualgift",
        "reference_kard",
        "reference_krosmaster"
      ],
      "properties": {
        "description": {"type": "string"},
        "name": {"type": "string"},
        "free": {"type": "boolean"},
        "quantity": {"type": "integer"},
        "type": {"type": "string"},
        "reference_icegift": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopReferenceTypeIceGift"
          }
        },
        "reference_virtualgift": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopReferenceTypeVirtualGift"
          }
        },
        "reference_kard": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopReferenceTypeKard"
          }
        },
        "reference_krosmaster": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopReferenceTypeKrosmaster"
          }
        }
      }
    },
    "ShopPromo": {
      "required": [
        "name",
        "description",
        "image"
      ],
      "properties": {
        "name": {"type": "string"},
        "description": {"type": "string"},
        "image": {"type": "string"}
      }
    },
    "ShopArticle": {
      "required": [
        "id",
        "key",
        "name",
        "subtitle",
        "description",
        "currency",
        "original_price",
        "price",
        "startdate",
        "enddate",
        "stock",
        "image",
        "references",
        "promo"
      ],
      "properties": {
        "id": {"type": "integer"},
        "key": {"type": "string"},
        "name": {"type": "string"},
        "subtitle": {"type": "string"},
        "description": {"type": "string"},
        "currency": {"type": "string"},
        "original_price": {"type": "number"},
        "price": {"type": "number"},
        "startdate": {
          "type": "string",
          "format": "date-time"
        },
        "enddate": {
          "type": "string",
          "format": "date-time"
        },
        "stock": {"type": "integer"},
        "image": {"type": "string"},
        "references": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopReference"
          }
        },
        "promo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopPromo"
          }
        }
      }
    },
    "ShopCategory": {
      "required": [
        "id",
        "key",
        "name",
        "displaymode",
        "description",
        "url",
        "child"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Auto increment"
        },
        "key": {"type": "string"},
        "name": {"type": "string"},
        "displaymode": {
          "type": "string",
          "description": "Display available for this category\n- LIST\n- MOSAIC\n- BANNER"
        },
        "description": {"type": "string"},
        "url": {"type": "string"},
        "child": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopCategory"
          },
          "description": "Child category"
        }
      }
    },
    "ShopImage": {
      "required": [
        "width",
        "height",
        "url"
      ],
      "properties": {
        "width": {"type": "integer"},
        "height": {"type": "integer"},
        "url": {"type": "string"}
      }
    },
    "ShopGondolaHead": {
      "required": [
        "image",
        "home",
        "main",
        "link",
        "name",
        "id"
      ],
      "properties": {
        "image": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopImage"
          }
        },
        "home": {"type": "boolean"},
        "main": {"type": "boolean"},
        "link": {"type": "string"},
        "name": {"type": "string"},
        "id": {"type": "integer"}
      }
    },
    "ShopHighlight": {
      "required": [
        "id",
        "image",
        "mode",
        "type",
        "link",
        "description",
        "name",
        "external_category",
        "external_article",
        "external_gondolahead",
        "external_direct"
      ],
      "properties": {
        "id": {"type": "integer"},
        "image": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopImage"
          }
        },
        "mode": {
          "type": "string",
          "description": "Display mode\n- IMAGE\n- CAROUSEL"
        },
        "type": {
          "type": "string",
          "description": "Type of Highlight for external\n- CATEGORY\n- ARTICLE\n- GONDOLAHEAD\n- DIRECT\n- NONE"
        },
        "link": {"type": "string"},
        "description": {"type": "string"},
        "name": {"type": "string"},
        "external_category": {
          "type": "object",
          "$ref": "#\/definitions\/ShopCategory"
        },
        "external_article": {
          "type": "object",
          "$ref": "#\/definitions\/ShopArticle"
        },
        "external_gondolahead": {
          "type": "object",
          "$ref": "#\/definitions\/ShopGondolaHead"
        },
        "external_direct": {
          "type": "string",
          "description": "A simple http link"
        }
      }
    },
    "ShopHome": {
      "required": [
        "categories",
        "gondolahead_main",
        "gondolahead_article",
        "hightlight_carousel",
        "hightlight_image"
      ],
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopCategory"
          }
        },
        "gondolahead_main": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopGondolaHead"
          }
        },
        "gondolahead_article": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopArticle"
          }
        },
        "hightlight_carousel": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopHighlight"
          }
        },
        "hightlight_image": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/ShopHighlight"
          }
        }
      }
    },
    "ShopBuyResult": {
      "required": [
        "balance",
        "order_id"
      ],
      "properties": {
        "balance": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#\/definitions\/MoneyBalance"
          }
        },
        "order_id": {"type": "integer"}
      }
    },
    "ShopBuyError": {
      "required": ["reason"],
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for buy failed\n- NOPRICE : No price for the article\n- STOCKMISSING : Some articles are out of stock\n- PAIDFAILED : Order can't be paid\n- CANCELFAILED : Order can't be canceled\n- MISSINGMONEY : Missing money on this account\n- PARTNER_ERROR : Error calling the Partner API",
          "items": {
            "enum": [
              "NOPRICE",
              "STOCKMISSING",
              "PAIDFAILED",
              "CANCELFAILED",
              "MISSINGMONEY",
              "PARTNER_ERROR"
            ]
          }
        }
      }
    },
    "HaapiException": {
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "status": {"type": "integer"},
        "message": {"type": "integer"},
        "type": {"type": "string"},
        "stack_trace": {
          "type": "array",
          "items": {"type": "string"}
        },
        "code": {"type": "integer"},
        "detail": {"type": "string"}
      }
    }
  }
}