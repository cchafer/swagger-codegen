package {{invokerPackage}}

case class ApiRequest(
                       // required fields
                       method: ApiMethod,
                       basePath: String,
                       operationPath: String,
                       contentType: String,

                       // optional fields
                       responses: Map[Int, Manifest[_]] = Map.empty,
                       bodyParam: Option[Any] = None,
                       formParams: Map[String, Any] = Map.empty,
                       pathParams: Map[String, Any] = Map.empty,
                       queryParams: Map[String, Any] = Map.empty,
                       headerParams: Map[String, Any] = Map.empty,
                       credentials: Seq[Credentials] = List.empty) {

  def withCredentials(cred: Credentials) = copy(credentials = credentials :+ cred)

  def withApiKey(key: ApiKeyValue, keyName: String, location: ApiKeyLocation) = withCredentials(ApiKeyCredentials(key, keyName, location))

  def withResponse[T](code: Int)(implicit m: Manifest[T]) = copy(responses = responses + (code -> m))

  def withDefaultResponse[T](implicit m: Manifest[T]) = withResponse[T](0)

  def responseForCode(statusCode: Int): Option[Manifest[_]] = responses.get(statusCode) orElse responses.get(0)

  def withoutBody() = copy(bodyParam = None)

  def withBody(body: Any) = copy(bodyParam = Some(body))

  def withFormParam(name: String, value: Any) = copy(formParams = formParams + (name -> value))

  def withPathParam(name: String, value: Any) = copy(pathParams = pathParams + (name -> value))

  def withQueryParam(name: String, value: Any) = copy(queryParams = queryParams + (name -> value))

  def withHeaderParam(name: String, value: Any) = copy(headerParams = headerParams + (name -> value))
}
